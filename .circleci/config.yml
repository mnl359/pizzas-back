version: 2.1
orbs:
  docker: circleci/docker@1.0.1
  aws-cli: circleci/aws-cli@1.0.0

terraform: &terraform
  working_directory: ~/project/terraform
  docker:
    - image: hashicorp/terraform:0.12.24
  environment:
    TF_IN_AUTOMATION: true
    TF_VAR_AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    TF_VAR_AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
    TF_VAR_AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    TF_VAR_db_user: admin
    TF_VAR_db_password: $MYSQL_DB_PASSWORD

jobs:
  compile:
    docker:
      - image: maven:3.6.3-jdk-11
        environment:
          MYSQL_DATABASE: pizzasdb
          MYSQL_USER: $MYSQL_DB_USER
          MYSQL_PASSWORD: $MYSQL_DB_PASSWORD
          MYSQL_DB_HOST: localhost
          MYSQL_DB_PORT: 3306
      - image: circleci/mysql:8.0.4
        environment:
          MYSQL_DATABASE: pizzasdb
          MYSQL_USER: $MYSQL_DB_USER
          MYSQL_PASSWORD: $MYSQL_DB_PASSWORD
          MYSQL_ROOT_PASSWORD: $MYSQL_DB_PASSWORD
    steps:
      - checkout
      - run:
          name: Compile
          command: mvn compile
      - run:
          name: Package
          command: mvn package
      - persist_to_workspace:
          root: ~/project
          paths: .
  build:
    executor: docker/docker
    steps:
      - attach_workspace:
          at: ~/project
      - setup_remote_docker
      - docker/check
      - docker/build:
          image: mcarras1/pizza-backend
          tag: "latest"
      - docker/push:
          image: mcarras1/pizza-backend
          tag: "latest"
  init:
    <<: *terraform
    steps:
      - checkout
      - run:
          name: init
          command: |
            cd terraform
            terraform init
      - persist_to_workspace:
          root: ~/project
          paths: .
  plan:
    <<: *terraform
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: plan
          command: |
            cd terraform
            terraform plan
      - store_artifacts:
          path: ~/project/terraform/tfplan
          destination: tfplan
      - persist_to_workspace:
          root: ~/project
          paths: .
  apply:
    <<: *terraform
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: apply
          command: |
            cd terraform
            terraform apply -auto-approve
      - run:
          name: show
          command: |
            cd terraform
            terraform show -no-color > tfresult
      - persist_to_workspace:
          root: ~/project
          paths: .
  deploy:
    executor: aws-cli/default
    steps:
      - attach_workspace:
          at: ~/pizza-aplication
      - aws-cli/install
      - aws-cli/setup:
            profile-name: personal
      - run:
          name: Deploy to aws
          command: aws s3 sync . s3://mybucket
  destroy:
    <<: *terraform
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: destroy app
          command: |
            cd terraform
            terraform destroy -auto-approve

workflows:
  version: 2
  build_front:
    jobs:
      - compile:
          filters:
            branches:
              only:
                - master
      - build:
          requires:
            - compile
          filters:
            branches:
              only:
                - master
      - init:
         requires:
            - build
      - plan:
          requires:
            - init
      - apply:
          requires:
            - plan
          filters:
            branches:
              only:
                - master
      #- deploy:
      #    requires:
      #      - apply
      - destroy:
          requires:
            - plan
          filters:
            branches:
              only:
                - destroy
