version: 2.1
orbs:
  docker: circleci/docker@1.0.1
  aws-cli: circleci/aws-cli@1.0.0

terraform: &terraform
  working_directory: ~/pizza-aplication/terraform
  docker:
    - image: hashicorp/terraform:0.12.24
  environment:
    TF_IN_AUTOMATION: true
    TF_VAR_AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    TF_VAR_AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
    TF_VAR_AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    TF_MYSQL_DB_HOST: $MYSQL_DB_HOST
    TF_MYSQL_DB_PORT: $MYSQL_DB_PORT
    TF_MYSQL_DB_DATABASE: $MYSQL_DB_DATABASE
    TF_MYSQL_DB_USER: $MYSQL_DB_USER
    TF_MYSQL_DB_PASSWORD: $MYSQL_DB_PASSWORD

jobs:
  compile:
    docker:
      - image: maven:3.6.3-jdk-11
        environment:
          MYSQL_DATABASE: pizzasdb
          MYSQL_USER: $MYSQL_DB_USER
          MYSQL_PASSWORD: $MYSQL_DB_PASSWORD
          MYSQL_ROOT_PASSWORD: $MYSQL_DB_PASSWORD
          MYSQL_DB_HOST: localhost
          MYSQL_DB_PORT: 3306
      - image: circleci/mysql:8.0.4
        environment:
          MYSQL_DATABASE: pizzasdb
          MYSQL_USER: $MYSQL_DB_USER
          MYSQL_PASSWORD: $MYSQL_DB_PASSWORD
          MYSQL_ROOT_PASSWORD: $MYSQL_DB_PASSWORD
    working_directory: ~/pizza-aplication
    steps:
      - checkout
      - run:
          name: Compile
          command: mvn compile
      - run:
          name: Package
          command: mvn package
      - persist_to_workspace:
          root: ~/pizza-aplication
          paths: .
  build:
    executor: docker/docker
    steps:
      - attach_workspace:
          at: ~/pizza-aplication
      - setup_remote_docker
      - docker/check
      - run: ls -la
      - docker/build:
          image: mcarras1/pizza-backend
          tag: "latest"
      - docker/push:
          image: mcarras1/pizza-backend
          tag: "latest"
  init:
    <<: *terraform
    steps:
      - checkout
      - run:
          name: init
          command: terraform init
      - persist_to_workspace:
          root: ~/pizza-aplication
          paths: .

  plan:
    <<: *terraform
    steps:
      - attach_workspace:
          at: ~/pizza-aplication
      - run:
          name: plan
          command: terraform plan
      - store_artifacts:
          path: ~/pizza-aplication/terraform/tfplan
          destination: tfplan
      - persist_to_workspace:
          root: ~/pizza-aplication
          paths: .

  apply:
    <<: *terraform
    steps:
      - attach_workspace:
          at: ~/pizza-aplication
      - run:
          name: apply
          command: terraform apply -auto-approve
      - run:
          name: show
          command: terraform show -no-color > tfresult
      - persist_to_workspace:
          root: ~/pizza-aplication
          paths: .

  deploy:
    executor: aws-cli/default
    steps:
      - attach_workspace:
          at: ~/pizza-aplication
      - aws-cli/install
      - aws-cli/setup:
            profile-name: personal
      - run:
          name: Deploy to aws
          command: aws s3 sync . s3://mybucket

  destroy:
    <<: *terraform
    steps:
      - attach_workspace:
          at: ~/pizza-aplication
      - run:
          name: destroy app
          command: terraform destroy -auto-approve

workflows:
  version: 2
  build_front:
    jobs:
      - compile
      - build:
          requires:
            - compile
      #- init:
      #   requires:
      #      - build
      #- plan:
      #    requires:
      #      - init
      #- apply:
      #    requires:
      #      - plan
      #- deploy:
      #    requires:
      #      - apply
      #- destroy:
      #    requires:
      #      - plan
      #    filters:
      #      branches:
      #        only:
      #          - destroy